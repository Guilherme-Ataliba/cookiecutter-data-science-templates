[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = {{ cookiecutter.repo_name|tojson }}
version = "0.0.1"
authors = [
  { name = {{ cookiecutter.author_name|tojson }} },
]
{% if cookiecutter.open_source_license != 'No license file' %}license = { file = "LICENSE" }{% endif %}
classifiers = [
    "Programming Language :: Python :: 3",
    {% if cookiecutter.open_source_license == 'MIT' %}"License :: OSI Approved :: MIT License"{% elif cookiecutter.open_source_license == 'BSD-3-Clause' %}"License :: OSI Approved :: BSD License"{% endif %}
]
{% if cookiecutter.linting_and_formatting == 'flake8+black+isort' %}
[tool.black]
line-length = 99
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
)/
'''

[tool.isort]
profile = "black"
known_first_party = ["{{ cookiecutter.repo_name }}"]
force_sort_within_sections = true
{% endif %}
{% if cookiecutter.linting_and_formatting == 'ruff' %}
[tool.ruff]
line-length = 99
src = ["{{ cookiecutter.repo_name }}"]
include = ["pyproject.toml", "{{ cookiecutter.repo_name }}/**/*.py"]

[tool.ruff.lint]
extend-select = [
  "E",   # pycodestyle (errors)
  "F",   # pyflakes
  "I",   # isort (you already use this)
  "UP",  # pyupgrade: modernize syntax
  "B",   # flake8-bugbear: likely bugs/design issues
  "N",   # pep8-naming
  "SIM", # flake8-simplify
  "C4",  # flake8-comprehensions
  "C901", # Cyclomatic Analysis
  "D",   # pydocstyle: docstrings
]
ignore = ["N806", "N803"]

[tool.ruff.lint.mccabe]
# Set the maximum allowed complexity before C901 errors are triggered:
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# Let Ruff auto-format code blocks inside docstrings (doctest, Markdown, RST)
docstring-code-format = true
# Keep code blocks within your overall line-length (or set a fixed int)
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
known-first-party = ["{{ cookiecutter.repo_name }}"]
force-sort-within-sections = true

# Per-file relaxations 
[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["D"]            # donâ€™t require full docstrings in tests
"scripts/**/*" = ["D"]          # skip docstrings in ad-hoc scripts
"config.py" = ["D"]          # skip linting in config
{% endif %}
